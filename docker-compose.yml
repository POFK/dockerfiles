version: '3.8'

services:
  nginx-proxy:
    #image: jwilder/nginx-proxy
    build:
      context: ./nginx-proxy
      dockerfile: Dockerfile
    image: piregistry.com:5000/workflow-nginx-proxy
    container_name: workflow-nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ENABLE_IPV6=true
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  vim:
    # FIXIT(vimtex): tlmgr install pdftexcmds && sudo apt install texlive-latex-full
    # docker-compose exec --user dev vim bash
    # docker exec --user dev -it workflow-vim bash
#   image: txmao/vimtx:latest
    build:
      context: ./vim
      dockerfile: Dockerfile
      args:
        GFW: "true"
    image: piregistry.com:5000/workflow-vim
    container_name: workflow-vim
    restart: always
    stdin_open: true
    tty: true
    environment:
      - VIMDIR="/opt/vimtx"
    entrypoint: ["bash"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/.X11-unix:/tmp/.X11-unix
      - $HOME/workspace:/home/workspace
      - $HOME/git:/home/dev/git
      - $HOME/books:/home/dev/books
      - $HOME/Pictures:/home/dev/Pictures
      - $HOME/Downloads:/home/dev/Downloads
      - $HOME/.ssh:/home/dev/.ssh
      - conda:/opt/conda
      - vimtx:/opt/vimtx
      - chrome:/volumes/chrome-volume:ro
      - dotfiles-volume:/volumes/dotfiles-volume
      - gitcache:/volumes/gitcache-volume:ro
    environment:
      - DISPLAY=$DISPLAY
    network_mode: host
    ipc: host
    depends_on:
      - python-env
      - gitcache
    
  chrome:
    # docker-compose --compatibility start chrome
    # docker --compatibility start workflow-chrome
    build:
      context: ./chrome
      dockerfile: Dockerfile
    image: piregistry.com:5000/workflow-chrome
    container_name: workflow-chrome
    privileged: true
    entrypoint: ["google-chrome"]
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - $HOME/Downloads:/home/chrome/Downloads
      - /dev/shm:/dev/shm
      - chrome:/home/chrome/.config
    environment:
      - DISPLAY=$DISPLAY
    network_mode: host
    devices:
      - /dev/snd:/dev/snd
      - /dev/dri:/dev/dri
    deploy:
      resources:
        limits:
          memory: 3000M
    depends_on:
      - backup-chrome

  autossh:
    build:
      context: ./sshd
      dockerfile: Dockerfile
    image: piregistry.com:5000/workflow-autossh
    container_name: workflow-autossh
    stdin_open: true
    tty: true
    command: ["sh"]
#   restart: always
    volumes:
      - $HOME/.ssh:/home/user/.ssh
    ports:
      - "18000:8000" # nova notebook
      - "18001:8001" # gnova kubeflow
      - "18002:8002" # gnova login


  monitor:
    # docker start workflow-bashtop
    # docker-compose --compatibility exec monitor bashtop
    build:
      context: ./bashtop
      dockerfile: Dockerfile
      args:
        GFW: "true"
    image: piregistry.com:5000/workflow-monitor
    container_name: workflow-monitor
    restart: always
    stdin_open: true
    entrypoint: ["/usr/bin/bash"]
    privileged: true
    network_mode: host
    ipc: host
    pid: host


  wpd:
    # docker-compose --compatibility exec wpd bashtop
    build:
      context: ./WebPlotDigitizer
      dockerfile: Dockerfile
    image: piregistry.com:5000/workflow-wpd
    container_name: workflow-wpd
    restart: always
    environment:
      - VIRTUAL_HOST=wpd.local
    expose:
      - "8080"
    depends_on:
      - nginx-proxy


  dotdrop:
    # docker-compose --compatibility start dotdrop
    # docker-compose --compatibility run dotdrop install -p docker
    build:
      context: ./dotdrop
      dockerfile: Dockerfile
      args:
        GFW: "true"
    image: piregistry.com:5000/workflow-dotdrop
    container_name: workflow-dotdrop
    volumes:
      - $HOME/git/dotfiles:/dotfiles
      - dotfiles-volume:/home/user

  python-env:
    #docker run -i -t continuumio/miniconda3 /bin/bash
    #docker run -i -t -p 8888:8888 continuumio/miniconda3 /bin/bash -c "/opt/conda/bin/conda install jupyter -y --quiet && mkdir /opt/notebooks && /opt/conda/bin/jupyter notebook --notebook-dir=/opt/notebooks --ip='*' --port=8888 --no-browser"
    image: continuumio/miniconda3
    container_name: workflow-python-env
    stdin_open: true
    tty: true
    command: ["/bin/bash"]
    volumes:
      - conda:/opt/conda
    expose:
      - "8888"
    depends_on:
      - backup-conda
     
  book:
#   image: txmao/mdbook
    build:
      context: ./mdbook
      dockerfile: Dockerfile
    image: piregistry.com:5000/workflow-book
    container_name: workflow-book
    restart: always
    environment:
      - VIRTUAL_HOST=book.local
    entrypoint: ["mdbook"]
    command: ["serve","-n","0.0.0.0","-p","3000"]
    expose:
      - "3000"
    volumes:
      - $HOME/books/env_tool:/books
    depends_on:
      - nginx-proxy


  diary:
#   image: txmao/mdbook
    build:
      context: ./mdbook
      dockerfile: Dockerfile
    image: piregistry.com:5000/workflow-book
    container_name: workflow-diary
    restart: always
    environment:
      - VIRTUAL_HOST=diary.local
    entrypoint: ["mdbook"]
    command: ["serve","-n","0.0.0.0","-p","3000"]
    expose:
      - "3000"
    volumes:
      - $HOME/books/diary:/books
    depends_on:
      - nginx-proxy

  academic:
#   image: txmao/mdbook
    build:
      context: ./mdbook
      dockerfile: Dockerfile
    image: piregistry.com:5000/workflow-book
    container_name: workflow-academic-book
    restart: always
    environment:
      - VIRTUAL_HOST=academic.local
    entrypoint: ["mdbook"]
    command: ["serve","-n","0.0.0.0","-p","3000"]
    expose:
      - "3000"
    volumes:
      - $HOME/books/academic:/books
    depends_on:
      - nginx-proxy

volumes:
  dotfiles-volume:
    name: dotfiles
  chrome:
    name: chrome
  conda:
    name: conda-env
  vimtx:
    name: vim-env


