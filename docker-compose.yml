version: '3.8'

services:
  vim:
    # docker-compose exec --user dev vim bash
    # docker exec --user dev -it workflow-vim bash
    image: txmao/vimtx:1.2.1
    container_name: workflow-vim
    restart: always
    stdin_open: true
    tty: true
    entrypoint: ["bash"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/.X11-unix:/tmp/.X11-unix
      - $HOME/workspace:/home/workspace
      - conda:/opt/conda
      - vimtx:/opt/vimtx
      - $HOME/.vimrc:/home/dev/.vimrc
      - chrome:/volumes/chrome-volume:ro
      - dotfiles-volume:/volumes/dotfiles-volume:ro
    environment:
      - DISPLAY=$DISPLAY
    network_mode: host
    ipc: host
    depends_on:
      - python-env
    
  chrome:
    # docker-compose --compatibility start chrome
    # docker --compatibility start workflow-chrome
    image: txmao/chrome:0.2
    container_name: workflow-chrome
    privileged: true
    entrypoint: ["google-chrome"]
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - $HOME/Downloads:/home/chrome/Downloads
      - /dev/shm:/dev/shm
      - chrome:/home/chrome/.config
    environment:
      - DISPLAY=$DISPLAY
    network_mode: host
    devices:
      - /dev/snd:/dev/snd
      - /dev/dri:/dev/dri
    deploy:
      resources:
        limits:
          memory: 3000M
    depends_on:
      - backup-chrome

  monitor:
    # docker start workflow-bashtop
    # docker-compose --compatibility exec monitor bashtop
    build:
      context: ./bashtop
      dockerfile: Dockerfile
      args:
        GFW: "true"
    container_name: workflow-monitor
    restart: always
    stdin_open: true
    entrypoint: ["/usr/bin/bash"]
    privileged: true
    network_mode: host
    ipc: host
    pid: host


  wpd:
    # docker-compose --compatibility exec wpd bashtop
    image: txmao/wpd:0.1
#   build:
#     context: ./WebPlotDigitizer
#     dockerfile: Dockerfile
#     args:
#       GFW: "true"
    container_name: workflow-wpd
    ports:
      - "4500:8080"


  proxy:
    image: dreamacro/clash:0.20.0 # latest image not work... @2020-06-29
    container_name: workflow-proxy
    restart: always
    volumes:
      - dotfiles-volume:/root
    ports:
      - "7890:7890"
      - "1080:7891"
      - "9090:9090"

  proxy-ui:
    image: haishanh/yacd:0.1.23
    container_name: workflow-proxy-ui
    restart: always
    ports:
      - "9091:80"
    depends_on:
      - proxy
 

  dotdrop:
    # docker-compose --compatibility start dotdrop
    # docker-compose --compatibility run dotdrop install -p docker
    build:
      context: ./dotdrop
      dockerfile: Dockerfile
      args:
        GFW: "true"
    container_name: workflow-dotdrop
    volumes:
      - $HOME/git/dotfiles:/dotfiles
      - dotfiles-volume:/home/user

# grafana:
#   image: grafana/grafana
#   container_name: grafana
#   ports:
#     - "3001:3000"

  python-env:
    #docker run -i -t continuumio/miniconda3 /bin/bash
    #docker run -i -t -p 8888:8888 continuumio/miniconda3 /bin/bash -c "/opt/conda/bin/conda install jupyter -y --quiet && mkdir /opt/notebooks && /opt/conda/bin/jupyter notebook --notebook-dir=/opt/notebooks --ip='*' --port=8888 --no-browser"
    image: continuumio/miniconda3
    container_name: workflow-python-env
    stdin_open: true
    tty: true
    command: ["/bin/bash"]
    volumes:
      - conda:/opt/conda
    ports:
      - 18234:8888
    depends_on:
      - backup-conda
     
  backup-chrome:
    # docker-compose exec chrome-backup ./backup.sh
    # docker run --rm -v chrome:/dbdata -v $HOME/backup/chrome:/backup ubuntu bash -c 'cd /dbdata &&  tar xzvf `ls /backup/backup*.tar.gz  -t | head -1` --strip 1'
    image: futurice/docker-volume-backup:2.1.0
    container_name: workflow-backup-chrome
    restart: always
    environment:
      BACKUP_CRON_EXPRESSION: "0 4 * * *"
      TZ: "Asia/Shanghai"
    volumes:
      - chrome:/backup/chrome:ro    # Mount the Grafana data volume (as read-only)
      - $HOME/backup/chrome:/archive        # Mount a local folder as the backup archive
    depends_on:
      - backup-rotate

  backup-conda:
    image: futurice/docker-volume-backup:2.1.0
    container_name: workflow-backup-conda
    restart: always
    environment:
      BACKUP_CRON_EXPRESSION: "0 5 * * *"
      TZ: "Asia/Shanghai"
    volumes:
      - conda:/backup/conda:ro    # Mount the Grafana data volume (as read-only)
      - $HOME/backup/conda:/archive        # Mount a local folder as the backup archive
    depends_on:
      - backup-rotate

  backup-vimenv:
    image: futurice/docker-volume-backup:2.1.0
    container_name: workflow-backup-vimenv
    restart: always
    environment:
      BACKUP_CRON_EXPRESSION: "10 5 * * *"
      TZ: "Asia/Shanghai"
    volumes:
      - vimtx:/backup/vimtx:ro    # Mount the Grafana data volume (as read-only)
      - $HOME/backup/vimtx:/archive        # Mount a local folder as the backup archive
    depends_on:
      - backup-rotate

  backup-rotate:
    build:
      context: ./rotation-backups
      dockerfile: Dockerfile
    container_name: workflow-rotate
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - ./rotation-backups/rotate-backups.ini:/root/.rotate-backups.ini:ro
      - ./rotation-backups/cronjobs:/etc/crontabs/root:ro
      - $HOME/backup/chrome:/archive/chrome        # Mount a local folder as the backup archive
      - $HOME/backup/conda:/archive/conda        # Mount a local folder as the backup archive
      - $HOME/backup/vimtx:/archive/vimtx        # Mount a local folder as the backup archive

volumes:
  chrome:
    name: chrome
  dotfiles-volume:
    name: dotfiles
  conda:
    name: conda-env
  vimtx:
    name: vim-env
